<!DOCTYPE html>
<html>
<head>
    <title>Напоминалка</title>
</head>
<body>
    <canvas id="reminderCanvas" width="400" height="200"></canvas>
    <div>
        <input type="text" id="reminderText" />
        <input type="datetime-local" id="reminderTime" />
        <button onclick="addReminder()">Добавить напоминание</button>
    </div>

    <script>
        // Создание класса Reminder для хранения напоминаний
        class Reminder {
            constructor(text, time) {
                this.text = text;
                this.time = time;
            }
        }

        // Создание класса ReminderCanvas для отрисовки и управления напоминаниями на canvas
        class ReminderCanvas {
            constructor(canvasId) {
                this.canvas = document.getElementById(canvasId);
                this.context = this.canvas.getContext('2d');
                this.reminders = [];

                // Рендеринг canvas
                this.render();

                // Проверка напоминаний каждую секунду
                setInterval(() => {
                    this.checkReminders();
                    this.render();
                }, 1000);
            }

            // Добавление нового напоминания
            addReminder(reminder) {
                this.reminders.push(reminder);
            }

            // Проверка напоминаний
            checkReminders() {
                const currentTime = new Date();
                const remindersToRemove = [];

                for (const reminder of this.reminders) {
                    if (reminder.time <= currentTime) {
                        remindersToRemove.push(reminder);
                        this.playReminderSound();
                    }
                }

                // Удаление выполненных напоминаний
                for (const reminder of remindersToRemove) {
                    const index = this.reminders.indexOf(reminder);
                    if (index > -1) {
                        this.reminders.splice(index, 1);
                    }
                }
            }

            // Воспроизведение звука напоминания
            playReminderSound() {
                const audio = new Audio('reminder-sound.mp3');
                audio.play();
            }

            // Рендеринг canvas
            render() {
                this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
                this.context.font = '16px Arial';

                for (let i = 0; i < this.reminders.length; i++) {
                    const reminder = this.reminders[i];
                    const y = 30 + i * 30;

                    // Отрисовка текста напоминания
                    this.context.fillText(reminder.text, 20, y);

                    // Отрисовка времени напоминания
                    const timeString = reminder.time.toLocaleString();
                    this.context.fillText(timeString, 300, y);
                }
            }
        }

        const reminderCanvas = new ReminderCanvas('reminderCanvas');

        function addReminder() {
            const textInput = document.getElementById('reminderText');
            const timeInput = document.getElementById('reminderTime');

            const text = textInput.value;
            const time = new Date(timeInput.value);

            const reminder = new Reminder(text, time);
            reminderCanvas.addReminder(reminder);

            textInput.value = '';
            timeInput.value = '';
        }
    </script>
</body>
</html>